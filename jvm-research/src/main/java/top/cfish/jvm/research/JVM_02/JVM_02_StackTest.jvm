E:\Me\jvm-research\src\main\java\top\cfish\jvm\research\JVM_02>javap -l -v JVM_02_StackTest

警告: 二进制文件JVM_02_StackTest包含top.cfish.jvm.research.JVM_02.JVM_02_StackTest
Classfile /E:/Me/jvm-research/src/main/java/top/cfish/jvm/research/JVM_02/JVM_02_StackTest.class

  Last modified 2019-6-10; size 500 bytes
  MD5 checksum 6621a36fb17f2ad204a5a4c619299a7a
  Compiled from "JVM_02_StackTest.java"

public class top.cfish.jvm.research.JVM_02.JVM_02_StackTest
  minor version: 0
  major version: 52
  flags: ACC_PUBLIC, ACC_SUPER
Constant pool:
   #1 = Methodref          #6.#19         // java/lang/Object."<init>":()V
   #2 = Class              #20            // top/cfish/jvm/research/JVM_02/JVM_02_StackTest
   #3 = Methodref          #2.#19         // top/cfish/jvm/research/JVM_02/JVM_02_StackTest."<init>":()V
   #4 = Methodref          #2.#21         // top/cfish/jvm/research/JVM_02/JVM_02_StackTest.record:(D)V
   #5 = Methodref          #2.#22         // top/cfish/jvm/research/JVM_02/JVM_02_StackTest.getAverage:()D
   #6 = Class              #23            // java/lang/Object
   #7 = Utf8               <init>
   #8 = Utf8               ()V
   #9 = Utf8               Code
  #10 = Utf8               LineNumberTable
  #11 = Utf8               record
  #12 = Utf8               (D)V
  #13 = Utf8               getAverage
  #14 = Utf8               ()D
  #15 = Utf8               main
  #16 = Utf8               ([Ljava/lang/String;)V
  #17 = Utf8               SourceFile
  #18 = Utf8               JVM_02_StackTest.java
  #19 = NameAndType        #7:#8          // "<init>":()V
  #20 = Utf8               top/cfish/jvm/research/JVM_02/JVM_02_StackTest
  #21 = NameAndType        #11:#12        // record:(D)V
  #22 = NameAndType        #13:#14        // getAverage:()D
  #23 = Utf8               java/lang/Object
{
  public top.cfish.jvm.research.JVM_02.JVM_02_StackTest();
    descriptor: ()V
    flags: ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #1                  // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 8: 0

  public void record(double);
    descriptor: (D)V
    flags: ACC_PUBLIC
    Code:
      stack=0, locals=3, args_size=2
         0: return
      LineNumberTable:
        line 12: 0

  public double getAverage();
    descriptor: ()D
    flags: ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: dconst_0
         1: dreturn
      LineNumberTable:
        line 16: 0

  public static void main(java.lang.String[]);
    descriptor: ([Ljava/lang/String;)V
    flags: ACC_PUBLIC, ACC_STATIC
    Code:
      // 局部变量只有args、calculator、score1、score2、avg
      // double类型会暂用两个slot
      stack=3, locals=6, args_size=1
         // 新建对象，使用astore_1存储在局部变量中
         0: new           #2                  // class top/cfish/jvm/research/JVM_02/JVM_02_StackTest
         3: dup
         4: invokespecial #3                  // Method "<init>":()V
         // astore_1是把栈顶的值存储到局部变量表下标为1的位置上
         7: astore_1

         // iconst_1和iconst_2用来将整数1和2加载到栈顶
         8: iconst_1
         9: istore_2

        // istore_2和istore_3用来将栈顶的元素存储到局部变量表2和3的位置上
        10: iconst_2
        11: istore_3

        // store指令会把栈顶元素移除、
        // 需要使用这些局部变量时，需要使用load命令重新加载到栈顶
        // aload_1从局部变量表中1的位置加载calculator对象
        12: aload_1
        // iload_2从局部变量表中2的位置加载一个整型值
        13: iload_2
        // i2d用来将整型值转为double并将新的值重新入栈
        14: i2d
        15: invokevirtual #4                  // Method record:(D)V

        18: aload_1
        19: iload_3
        20: i2d
        21: invokevirtual #4                  // Method record:(D)V

        24: aload_1
        25: invokevirtual #5                  // Method getAverage:()D
        28: dstore        4

        30: return
      LineNumberTable:
        line 21: 0
        line 23: 8
        line 24: 10
        line 26: 12
        line 27: 18
        line 29: 24
        line 30: 30
}
